rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User document rules
    match /users/{userId} {
      // Base user rules
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Username update rules with 48-hour cooldown
      allow update: if request.auth != null && 
                      request.auth.uid == userId && 
                      (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['username']) || 
                       (resource.data.lastUsernameChangeAt == null || 
                        request.time.toMillis() - resource.data.lastUsernameChangeAt.toMillis() > 172800000)); // 48 hours in milliseconds
    }
    
    // Username reservation rules
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Only allow update if the username is owned by the current user
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Challenge document rules
    match /challenges/{challengeId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
} 